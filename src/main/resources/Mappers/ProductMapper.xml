<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
  "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.team.Mapper.ProductMapper">

<!-- ===================================  상품 등록  =====================================  -->

	<select id="getProductCategory" resultType="map">
		SELECT TDC.DCO_ID
			 , TDC.DCO_VALUE
			 , TDC.ID
			 , TSC.SCO_ID
			 , TMC.MCO_ID
		  FROM TEST_DETAIL_CODE TDC
		  JOIN TEST_SUB_CODE TSC 
		    ON TDC.SCO_ID = TSC.SCO_ID
		  JOIN TEST_MAIN_CODE TMC 
		    ON TSC.MCO_ID = TMC.MCO_ID
		 WHERE TMC.MCO_ID = 'MAM'
		   AND TSC.SCO_ID = 'PRS'
		   AND TDC.DCO_ID LIKE 'PCD%'
	</select>

	<select id="getProductLocation" resultType="map">
		SELECT TDC.DCO_ID
			 , TDC.DCO_VALUE
			 , TSC.SCO_ID
			 , TSC.SCO_VALUE
			 , TMC.MCO_ID
		  FROM TEST_DETAIL_CODE TDC
		  JOIN TEST_SUB_CODE TSC 
		    ON TDC.SCO_ID = TSC.SCO_ID
		  JOIN TEST_MAIN_CODE TMC 
		    ON TSC.MCO_ID = TMC.MCO_ID
		 WHERE TMC.MCO_ID = 'LOM'
		   AND TSC.SCO_ID LIKE 'LOS%'
		AND TDC.DCO_ID LIKE 'LOD%'
	</select>

	<select id="getProductState" resultType="map">
		SELECT TDC.DCO_ID
		     , TDC.DCO_VALUE
		     , TSC.SCO_ID
		     , TMC.MCO_ID
		  FROM TEST_DETAIL_CODE TDC
		  JOIN TEST_SUB_CODE TSC 
		    ON TDC.SCO_ID = TSC.SCO_ID
		  JOIN TEST_MAIN_CODE TMC 
		    ON TSC.MCO_ID = TMC.MCO_ID
		 WHERE TMC.MCO_ID = 'PRM'
		   AND TSC.SCO_ID LIKE 'PSS'
		   AND TDC.DCO_ID LIKE 'PSD%'
	</select>

	<select id="getProductType" resultType="map">
		SELECT TDC.DCO_ID
		     , TDC.DCO_VALUE
		     , TSC.SCO_ID
		     , TMC.MCO_ID
		  FROM TEST_DETAIL_CODE TDC
		  JOIN TEST_SUB_CODE TSC 
		    ON TDC.SCO_ID = TSC.SCO_ID
		  JOIN TEST_MAIN_CODE TMC 
		    ON TSC.MCO_ID = TMC.MCO_ID
		 WHERE TMC.MCO_ID = 'PRM'
		   AND TSC.SCO_ID LIKE 'TYS'
		   AND TDC.DCO_ID LIKE 'TYD%'
	</select>

	<select id="getProductNego" resultType="map">
		SELECT TDC.DCO_ID
			 , TDC.DCO_VALUE
			 , TSC.SCO_ID
			 , TMC.MCO_ID
		  FROM TEST_DETAIL_CODE TDC
		  JOIN TEST_SUB_CODE TSC 
		    ON TDC.SCO_ID = TSC.SCO_ID
		  JOIN TEST_MAIN_CODE TMC 
		    ON TSC.MCO_ID = TMC.MCO_ID
		 WHERE TMC.MCO_ID = 'PRM'
		   AND TSC.SCO_ID LIKE 'NES'
		   AND TDC.DCO_ID LIKE 'NED%'
	</select>
	
	<select id="getProductStatus" resultType="map">
		SELECT TDC.DCO_ID
			 , TDC.DCO_VALUE
			 , TDC.ID
			 , TSC.SCO_ID
			 , TMC.MCO_ID
		  FROM TEST_DETAIL_CODE TDC
		  JOIN TEST_SUB_CODE TSC 
		    ON TDC.SCO_ID = TSC.SCO_ID
		  JOIN TEST_MAIN_CODE TMC 
		    ON TSC.MCO_ID = TMC.MCO_ID
		 WHERE TMC.MCO_ID = 'PRM'
		   AND TSC.SCO_ID LIKE 'STS'
		   AND TDC.DCO_ID LIKE 'STD%'
	</select>
	
	<select id="getAllProductInfo" resultType="map">
	SELECT P.MEM_NO
		 , P.PRO_NO
		 , P.PRO_VIEWS
		 , P.PRO_DATE
		 , P.PRO_CATEGORY
		 , D2.DCO_VALUE AS PRS
		 , P.PRO_LOCATION
		 , P.PRO_NEG
		 , P.PRO_PRICE
		 , P.PRO_STATE		 
		 , P.PRO_STATUS
		 , D1.DCO_VALUE AS STS
		 , P.PRO_TITLE
		 , P.PRO_TYPE
		 , P.PRO_CONTENT
		 , P.PRO_IMG
	  FROM PRODUCT P
	  LEFT JOIN TEST_DETAIL_CODE D1
		ON P.PRO_STATUS = D1.DCO_ID
	  LEFT JOIN TEST_DETAIL_CODE D2
		ON P.PRO_CATEGORY = D2.DCO_ID
	</select>
	
<!-- ===================================  상품 목록  =====================================  -->

	<select id="getSortList" resultType="map">
		SELECT TDC.DCO_ID
			 , TDC.DCO_VALUE
			 , TSC.SCO_ID
			 , TMC.MCO_ID
		  FROM TEST_DETAIL_CODE TDC
		  JOIN TEST_SUB_CODE TSC 
		    ON TDC.SCO_ID = TSC.SCO_ID
		  JOIN TEST_MAIN_CODE TMC 
		    ON TSC.MCO_ID = TMC.MCO_ID
		 WHERE TMC.MCO_ID = 'PRM'
		   AND TSC.SCO_ID LIKE 'ARS'
		   AND TDC.DCO_ID LIKE 'ARD%'
	</select>
	
	<select id="getProductsSorted" resultType="map">
    	SELECT PRO.PRO_NO
        	 , PRO.PRO_VIEWS
         	 , PRO.PRO_DATE
         	 , TDC3.DCO_VALUE AS PRO_CATEGORY
         	 , TSC1.SCO_VALUE AS LOCATION_SUB
          	 , TDC1.DCO_VALUE AS LOCATION_VALUE
         	 , PRO.PRO_PRICE
         	 , TDC4.DCO_VALUE AS PRO_STATUS
         	 , PRO.PRO_TITLE
         	 , TDC2.DCO_VALUE AS TYPE_VALUE
         	 , PRO.PRO_IMG
    	  FROM PRODUCT PRO 
    	  JOIN TEST_DETAIL_CODE TDC1 
        	ON PRO.PRO_LOCATION = TDC1.DCO_ID
    	  JOIN TEST_SUB_CODE TSC1
        	ON TDC1.SCO_ID = TSC1.SCO_ID
    	  JOIN TEST_DETAIL_CODE TDC2 
        	ON PRO.PRO_TYPE = TDC2.DCO_ID
          JOIN TEST_DETAIL_CODE TDC3 
        	ON PRO.PRO_CATEGORY = TDC3.DCO_ID
          JOIN TEST_DETAIL_CODE TDC4
        	ON PRO.PRO_STATUS = TDC4.DCO_ID
         WHERE 1=1
           <if test="categoryId != null and categoryId != ''">
           AND PRO.PRO_CATEGORY = #{categoryId}
           </if>
           <if test="locationScoId != null and locationScoId != ''">
           AND TSC1.SCO_ID = #{locationScoId}
           </if>
           <if test="locationDcoId != null and locationDcoId != ''">
           AND TDC1.DCO_ID = #{locationDcoId}
           </if>
           <if test="statusId != null and statusId != ''">
           AND PRO.PRO_STATUS = #{statusId}
           </if>
           <if test="searchKeyword != null and searchKeyword != ''">
           AND PRO.PRO_TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
           </if>
    	<choose>
	        <when test="sortType == 'views'">
            ORDER BY PRO.PRO_VIEWS DESC
        	</when>
        	<when test="sortType == 'date'">
            ORDER BY PRO.PRO_DATE DESC
        	</when>
        	<when test="sortType == 'price_high'">
            ORDER BY CAST(PRO.PRO_PRICE AS UNSIGNED) DESC
	        </when>
    	    <when test="sortType == 'price_low'">
            ORDER BY CAST(PRO.PRO_PRICE AS UNSIGNED) ASC
        	</when>
        	<otherwise>
            ORDER BY PRO.PRO_DATE DESC
        	</otherwise>
    	</choose>
    	LIMIT #{start}, #{size}
	</select>
	
	<select id="getTotalProducts" resultType="int">
    	SELECT COUNT(*) 
    	  FROM PRODUCT PRO
    	 WHERE 1=1
           <if test="categoryId != null and categoryId != ''">
           AND PRO.PRO_CATEGORY = #{categoryId}
           </if>
           <if test="locationScoId != null and locationScoId != ''">
           AND PRO.PRO_LOCATION IN (
        SELECT TDC.DCO_ID 
          FROM TEST_DETAIL_CODE TDC
          JOIN TEST_SUB_CODE TSC
            ON TDC.SCO_ID = TSC.SCO_ID
         WHERE TSC.SCO_ID = #{locationScoId}
        	)
    	  </if>
    	  <if test="locationDcoId != null and locationDcoId != ''">
     	   AND PRO.PRO_LOCATION = #{locationDcoId}
    	 </if>
    	 <if test="statusId != null and statusId != ''">
     	   AND PRO.PRO_STATUS = #{statusId}
    	 </if>
    	 <if test="searchKeyword != null and searchKeyword != ''">
           AND PRO.PRO_TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
         </if>
	</select>
	
	

<!-- ===================================  상세 상품 정보  =====================================  -->

	<update id="updateProViews">
    	UPDATE PRODUCT
    	   SET PRO_VIEWS = PRO_VIEWS + 1
    	 WHERE PRO_NO = #{proNo}
	</update>
	
	<select id = "getContentProduct" resultType="map">
		SELECT PRO.MEM_NO
			 , PRO.PRO_NO
        	 , PRO.PRO_VIEWS
         	 , PRO.PRO_DATE
         	 , PRO.PRO_PRICE
         	 , PRO.PRO_TITLE
         	 , PRO.PRO_CONTENT
         	 , PRO.PRO_IMG
         	 , PRO.PRO_CATEGORY
         	 , PRO.PRO_TYPE
         	 , PRO.PRO_STATUS AS PRO_STATUS_VALUE
         	 , PRO.PRO_NEG AS PRO_NEG_VALUE
         	 , PRO.PRO_STATE AS PRO_STATE_VALUE
         	 , PRO.PRO_STATUS AS PRO_STATUS_CODE
         	 , TSC1.SCO_VALUE AS LOCATION_SUB
          	 , TDC1.DCO_VALUE AS LOCATION_VALUE
          	 , TSC2.SCO_VALUE AS TYPE_VALUE_SUB
          	 , TDC2.DCO_VALUE AS TYPE_VALUE
          	 , TDC3.DCO_VALUE AS PRO_CATEGORY_C
         	 , TSC4.SCO_VALUE AS PRO_STATUS_SUB
         	 , TDC4.DCO_VALUE AS PRO_STATUS
         	 , TSC5.SCO_VALUE AS PRO_NEG_SUB
         	 , TDC5.DCO_VALUE AS PRO_NEG
         	 , TSC6.SCO_VALUE AS PRO_STATE_SUB
         	 , TDC6.DCO_VALUE AS PRO_STATE
         	 , M.MEM_ID
         	 , M.MEM_EMAIL
    	  FROM PRODUCT PRO 
    	  JOIN TEST_DETAIL_CODE TDC1 
        	ON PRO.PRO_LOCATION = TDC1.DCO_ID
    	  JOIN TEST_SUB_CODE TSC1
        	ON TDC1.SCO_ID = TSC1.SCO_ID
    	  JOIN TEST_DETAIL_CODE TDC2 
        	ON PRO.PRO_TYPE = TDC2.DCO_ID
          JOIN TEST_SUB_CODE TSC2
        	ON TDC2.SCO_ID = TSC2.SCO_ID
          JOIN TEST_DETAIL_CODE TDC3 
        	ON PRO.PRO_CATEGORY = TDC3.DCO_ID
          JOIN TEST_DETAIL_CODE TDC4 
        	ON PRO.PRO_STATUS = TDC4.DCO_ID
          JOIN TEST_SUB_CODE TSC4
        	ON TDC4.SCO_ID = TSC4.SCO_ID
          JOIN TEST_DETAIL_CODE TDC5
        	ON PRO.PRO_NEG = TDC5.DCO_ID
          JOIN TEST_SUB_CODE TSC5
        	ON TDC5.SCO_ID = TSC5.SCO_ID
          JOIN TEST_DETAIL_CODE TDC6
        	ON PRO.PRO_STATE = TDC6.DCO_ID
          JOIN TEST_SUB_CODE TSC6
        	ON TDC6.SCO_ID = TSC6.SCO_ID
       	  JOIN MEMBERS M
        	ON PRO.MEM_NO = M.MEM_NO
         WHERE PRO.PRO_NO = #{proNo}
	</select>
	
	<select id="getMemNoByMemId" resultType="Integer">
    	SELECT MEM_NO
    	  FROM MEMBERS
    	 WHERE MEM_ID = #{memId}
	</select>
	
	<select id="getReportCategory" resultType="map">
    	SELECT DC.DCO_ID
    		 , DC.DCO_VALUE	
    	  FROM DETAIL_CODE DC
    	 WHERE DCO_ID LIKE 'RED%'
	</select>
	
	<insert id="insertReport">
        INSERT INTO REPORT (MEM_NO
        	 , PRO_NO
        	 , REP_DATE
        	 , REP_CONTENT
        	 , REP_SECTION
        	 , REP_RESULT
        	 , REP_STATUS)
        VALUES (#{memNo}
             , #{proNo}
             , NOW()
             , #{reportDescription}
             , #{categoryDcoId}
             , 'RRD3'
             , 'RSD1')
    </insert>
	
	<select id="getCountReport"  resultType="int">
		SELECT COUNT(*) AS REPORT_COUNT
		  FROM REPORT REP
		 WHERE REP.MEM_NO = #{memNo}
		   AND REP.REP_RESULT = 'RRD1';
	</select>




</mapper>


